version: 0.2

env:
  variables:
    IMAGE_REPO_NAME: "nginx-application-repository"
    BUILD_SUCCESS: "false"   # initialize flag

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - aws ecr get-login-password | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - echo Getting Git commit ID...
      - COMMIT_ID=$CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo Using image tag... $COMMIT_ID

  build:
    commands:
      - echo Building Docker image...
      - |
        if docker build -t $IMAGE_REPO_NAME:$COMMIT_ID $CODEBUILD_SRC_DIR && \
           docker tag $IMAGE_REPO_NAME:$COMMIT_ID $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$COMMIT_ID; then
          export BUILD_SUCCESS="true"
        else
          export BUILD_SUCCESS="false"
        fi

  post_build:
    commands:
      - echo "Build success flag... $BUILD_SUCCESS"
      - if [ "$BUILD_SUCCESS" = "true" ]; then
          echo Pushing Docker image to ECR...
          docker push $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$COMMIT_ID;
          echo Writing image definitions file...
          printf '[{"name":"nginx","imageUri":"%s"}]' $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$COMMIT_ID > imagedefinitions.json;
          cat imagedefinitions.json;
        else
          echo "Build failed. Skipping Docker push and image definition creation."
        fi

artifacts:
  files:
    - imagedefinitions.json
